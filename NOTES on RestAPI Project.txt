-> Employee class:
@Getter
@Setter
Lombok provides two accessor annotations, @Getter and @Setter. We can annotate every field or simply mark the whole class with them.

@Entity -> makes class as a JPA entity

@NoArgsConstructor -> will generate a constructor with no parameters

@AllArgsConstructor -> generates a constructor with 1 parameter for each field in your class. 

@Table(name="employees") -> to provide table details

@Id -> used to make id as a PRIMARY KEY

@GeneratedValue(strategy = GenerationType.IDENTITY) -> to configure the way of increment of the specified column(field), to provide PRIMARY KEY generation strategy

@Column(name = "first_name",nullable = false) -> nullable false means this column becomes not null

@Column(name = "first_name") -> creates a column name for this field (private String firstName;)
NOTE: If we don't specify column name using this anno @Column, JPA automatically internally picks that property name as a column name i.e. firstName or emailId

Our SpringBoot Application is running in Tomcat server port 8080
Now goto cmd in mysql server and run this: use ems;   (to use this ems database)

ERROR COMING -> My table is created in SpringBoot Application but not showing in MYSQL in my database where i created it.

-> Now in repository package, create an interface EmployeeRepository. It extends JpaRepository<Employee,Long>
Employee is the type of JPA entity, Long is the type of primary key(long int id).

Now create Custom Exception



